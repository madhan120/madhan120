start=int(input())
goal=int(input())

k=str(bin(start)[2:])
l=str(bin(goal)[2:])
c=0
if len(k)>=len(l):
    s=(len(k)-len(l))*"0"+l
    print(s)
    for j in range(len(s)):
        if s[j]!=k[j]:
            c=c+1
elif len(k)<=len(l):
    t=(len(l)-len(k))*"0"+k
    print(t)
    for j in range(len(t)):
        if t[j]!=l[j]:
            c=c+1
print(c) 


Input: start = 10, goal = 7
Output: 3
Explanation: The binary representation of 10 and 7 are 1010 and 0111 respectively. We can convert 10 to 7 in 3 steps:
- Flip the first bit from the right: 1010 -> 1011.
- Flip the third bit from the right: 1011 -> 1111.
- Flip the fourth bit from the right: 1111 -> 0111.
It can be shown we cannot convert 10 to 7 in less than 3 steps. Hence, we return 3.
